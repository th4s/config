upstream geth_ws {
    server 127.0.0.1:8546;
}

upstream lighthouse_http {
    server 127.0.0.1:5052;
}

server {

    root /var/www/metavoid.xyz;

    index index.html;

    server_name www.metavoid.xyz metavoid.xyz;

    client_max_body_size 10M;

    location / {
        try_files $uri $uri/ /index.html;
        add_header Cache-Control "public";
        expires 1d;
        limit_req zone=basic burst=100 nodelay;
    }

    location /geth/ {
        proxy_pass http://geth_ws/;
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 3600;
        auth_basic "Geth Websocket Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        limit_req zone=auth burst=3 nodelay;
    }

    location /lighthouse/ {
        proxy_pass http://lighthouse_http/;
        proxy_http_version 1.1;
        proxy_read_timeout 3600;
        auth_basic "Lighthouse Beacon Http Access";
	auth_basic_user_file /etc/nginx/.htpasswd;
        limit_req zone=auth burst=3 nodelay;
    }

    listen 443 ssl http2; # managed by Certbot
    ssl_certificate /etc/letsencrypt/live/metavoid.xyz/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/metavoid.xyz/privkey.pem; # managed by Certbot

    #this is bullshit	
    #include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot

    ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot
}

server {
    if ($host = www.metavoid.xyz) {
        return 301 https://$host$request_uri;
    } # managed by Certbot

    if ($host = metavoid.xyz) {
        return 301 https://$host$request_uri;
    }

    server_name www.metavoid.xyz metavoid.xyz;

    listen 80;
    return 404; # managed by Certbot
}
